CREATE TABLE IF NOT EXISTS users (
    user_id INT AUTO_INCREMENT PRIMARY KEY,
    full_name VARCHAR(100) NOT NULL,
    phone VARCHAR(15) NOT NULL,
    email VARCHAR(100) NOT NULL UNIQUE,
    password TEXT NOT NULL,
    address TEXT,
    bio text,
    state varchar(100) ,
    district varchar(100),
    role ENUM('customer', 'baker') NOT NULL,
    profile_image LONGBLOB DEFAULT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    )
  
CREATE TABLE IF NOT EXISTS bakers (
  baker_id INT AUTO_INCREMENT PRIMARY KEY,
  user_id INT NOT NULL,
  brand_name VARCHAR(255),
  brand_proof VARCHAR(255),
  identity_proof VARCHAR(255) NOT NULL, 
  specialty VARCHAR(100),
  experience INT NOT NULL,
  order_lead_time VARCHAR(100) NULL,
  availability VARCHAR(100) NULL,
  custom_orders VARCHAR(100) NOT NULL,  
  rating decimal, 
  no_of_reviews int 
  FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE
);

CREATE TABLE products (
  product_id INT AUTO_INCREMENT PRIMARY KEY,
  baker_id INT NOT NULL,
  name VARCHAR(100) NOT NULL,
  description TEXT,
  category VARCHAR(100),
  price DECIMAL(10,2) NOT NULL,
  image VARCHAR(255),
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (baker_id) REFERENCES bakers(baker_id) on DELETE CASCADE
);

CREATE TABLE orders (
     order_id INT AUTO_INCREMENT PRIMARY KEY,
    customer_id INT NOT NULL,
    delivery_address TEXT NOT NULL,
    delivery_date DATETIME NOT NULL,
    order_status ENUM('pending', 'confirmed', 'shipped', 'delivered', 'cancelled') DEFAULT 'pending',
    order_date DATETIME DEFAULT CURRENT_TIMESTAMP,
    payment_method ENUM('Card', 'UPI') NOT NULL,
    payment_status ENUM('success', 'failed') DEFAULT 'success',
    FOREIGN KEY (customer_id) REFERENCES users(user_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS order_items (
    order_item_id INT AUTO_INCREMENT PRIMARY KEY,
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    unit_price DECIMAL(10,2) NOT NULL,
    baker_status ENUM('pending', 'accepted', 'rejected') DEFAULT 'pending',
    total_price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (order_id) REFERENCES orders(order_id) ON DELETE CASCADE,
    FOREIGN KEY (product_id) REFERENCES products(product_id) ON DELETE CASCADE
);

CREATE TABLE cart (
    cart_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT,  
    product_id INT,
    quantity INT DEFAULT 1,
    added_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE,
    FOREIGN KEY (product_id) REFERENCES products(product_id) ON DELETE CASCADE
);

CREATE TABLE messages (
    message_id INT AUTO_INCREMENT PRIMARY KEY,
    sender_id INT NOT NULL,         
    receiver_id INT NOT NULL,       
    message TEXT NOT NULL,          
    sent_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    received_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (sender_id) REFERENCES users(user_id) ON DELETE CASCADE,
    FOREIGN KEY (receiver_id) REFERENCES users(user_id) ON DELETE CASCADE
);






